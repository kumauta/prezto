#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...


########################################
# 環境変数
export LANG=ja_JP.UTF-8
 
 
# 色を使用出来るようにする
autoload -Uz colors
colors
 
# vi 風キーバインドにする
bindkey -v
 
# ヒストリの設定
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000
 
# プロンプト
# 1行表示
PROMPT="${PROMPT}%{${reset_color}%}"
 
 
# 単語の区切り文字を指定する
autoload -Uz select-word-style
select-word-style default
# ここで指定した文字は単語区切りとみなされる
# / も区切りと扱うので、^W でディレクトリ１つ分を削除できる
zstyle ':zle:*' word-chars " /=;@:{},|"
zstyle ':zle:*' word-style unspecified
 
########################################
# 補完
# 補完機能を有効にする
autoload -Uz compinit
compinit
 
# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
 
# ../ の後は今いるディレクトリを補完しない
zstyle ':completion:*' ignore-parents parent pwd ..
 
# sudo の後ろでコマンド名を補完する
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
                   /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin
 
# ps コマンドのプロセス名補完
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'
 
 
########################################
# vcs_info
 
autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%r)-[%b]'
zstyle ':vcs_info:*' actionformats '(%r)-[%b|%a]'
precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
RPROMPT="%1(v|%F{green}%1v%f|)"
 
 
########################################
# オプション
# 日本語ファイル名を表示可能にする
setopt print_eight_bit
 
# beep を無効にする
setopt no_beep
 
# フローコントロールを無効にする
setopt no_flow_control
 
# '#' 以降をコメントとして扱う
setopt interactive_comments
 
# ディレクトリ名だけでcdする
setopt auto_cd
 
# cd したら自動的にpushdする
setopt auto_pushd
# 重複したディレクトリを追加しない
setopt pushd_ignore_dups
 
# = の後はパス名として補完する
setopt magic_equal_subst
 
# 同時に起動したzshの間でヒストリを共有する
setopt share_history
 
# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups
 
# ヒストリファイルに保存するとき、すでに重複したコマンドがあったら古い方を削除する
setopt hist_save_nodups
 
# スペースから始まるコマンド行はヒストリに残さない
setopt hist_ignore_space
 
# ヒストリに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks
 
# 補完候補が複数あるときに自動的に一覧表示する
setopt auto_menu
 
# 高機能なワイルドカード展開を使用する
setopt extended_glob
 
########################################
# キーバインド
 
# ^R で履歴検索をするときに * でワイルドカードを使用出来るようにする
bindkey '^R' history-incremental-pattern-search-backward
 
########################################
# エイリアス
 
alias la='ls -a'
alias ll='ls -l'
 
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
 
alias mkdir='mkdir -p'
 
# sudo の後のコマンドでエイリアスを有効にする
alias sudo='sudo '
 
# グローバルエイリアス
alias -g L='| less'
alias -g G='| grep'

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

alias 2='echo;echo;'
alias 3='echo;echo;echo;'
alias 4='echo;echo;echo;echo;'
 
alias gs='git status'
alias gb='git branch'
alias gc='git commit -a'
alias gl='git log --stat'
alias gf='git fetch'
alias glo='git lola'
alias gd='git diff'

# C で標準出力をクリップボードにコピーする
# mollifier delta blog : http://mollifier.hatenablog.com/entry/20100317/p1
if which pbcopy >/dev/null 2>&1 ; then
    # Mac
    alias -g C='| pbcopy'
elif which xsel >/dev/null 2>&1 ; then
    # Linux
    alias -g C='| xsel --input --clipboard'
elif which putclip >/dev/null 2>&1 ; then
    # Cygwin
    alias -g C='| putclip'
fi
 
# cdコマンド実行後、lsを実行する
function cd() {
  builtin cd $@ && pwd && ls -la;
}
 
# iterm2のタイトルを変更する
function title(){
  builtin echo -ne "\033]0;$@\007"
}

# タブの色を変える
function tabcolor_red(){
  builtin echo -e "\033]6;1;bg;red;brightness;204\a"
  builtin echo -e "\033]6;1;bg;green;brightness;0\a"
  builtin echo -e "\033]6;1;bg;blue;brightness;0\a"
}
function tabcolor_orange(){
  builtin echo -e "\033]6;1;bg;red;brightness;255\a"
  builtin echo -e "\033]6;1;bg;green;brightness;94\a"
  builtin echo -e "\033]6;1;bg;blue;brightness;25\a"
}
function tabcolor_green(){
  builtin echo -e "\033]6;1;bg;red;brightness;88\a"
  builtin echo -e "\033]6;1;bg;green;brightness;191\a"
  builtin echo -e "\033]6;1;bg;blue;brightness;63\a"
}
function tabcolor_yellow(){
  builtin echo -e "\033]6;1;bg;red;brightness;255\a"
  builtin echo -e "\033]6;1;bg;green;brightness;255\a"
  builtin echo -e "\033]6;1;bg;blue;brightness;0\a"
}
function tabcolor_blue(){
  builtin echo -e "\033]6;1;bg;red;brightness;28\a"
  builtin echo -e "\033]6;1;bg;green;brightness;5\a"
  builtin echo -e "\033]6;1;bg;blue;brightness;255\a"
}

function resettabcolor(){
  builtin echo -ne "\033]6;1;bg;*;default\a"
}

# needs brew install coreutils
function ago(){
  gdate -d "$1 days ago"
}
function after(){
  gdate -d "$1 days"
}

function utime(){
  # needs "brew install gawk"
  echo "${1}" | /usr/local/Cellar/gawk/4.1.1/bin/gawk '{print strftime("%Y-%m-%d %H:%M:%S",$1)}'
}

function f(){
  echo "find *$1* ====================================="
  find ./ -name "*$1*"
}

function hosts(){
  cat /etc/hosts
}

function vi(){
  if echo ${1} | grep -q :; then
    `which vim` `echo ${1} | sed "s/:/ /" | awk '{print $1 " -c " $2}'`
  else
    `which vim` $*
  fi
}

urlencode () {
  echo $* | nkf -eMQ | tr = %
}
urldecode () {
  echo $* | tr % = | nkf -emQ
}
########################################
# OS 別の設定
case ${OSTYPE} in
    darwin*)
        #Mac用の設定
        export CLICOLOR=1
        alias ls='ls -G -F'
        #alias vi='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
        #alias vim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
        eval "$(rbenv init - zsh)"
        ;;
    linux*)
        #Linux用の設定
        ;;
esac
 
# vim:set ft=zsh:

export JAVA_HOME=`/System/Library/Frameworks/JavaVM.framework/Versions/A/Commands/java_home -v "1.7"`
PATH=${JAVA_HOME}/bin:${PATH}
